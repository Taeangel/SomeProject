//
//  AddViewController.swift
//  TodoVipApp
//
//  Created by song on 2023/04/03.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddDisplayLogic: AnyObject
{
  func displaySomething(viewModel: Add.PostTodo.ViewModel)
}

class AddViewController: UIViewController, AddDisplayLogic
{
  var interactor: AddBusinessLogic?
  var router: (NSObjectProtocol & AddRoutingLogic & AddDataPassing)?
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = AddInteractor()
    let presenter = AddPresenter()
    let router = AddRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
  }
  
  // MARK: Do something
  
  @IBOutlet weak var todoLabel: UITextField!
  @IBOutlet weak var isDoneSwitch: UISwitch!
  
  @IBAction func addTodoButtonDidTap(_ sender: Any) {
    Task {
      try await postTodo()
    }
  }
  
  
  func postTodo() async throws
  {
    let request = Add.PostTodo.Request(todo: TodoDTO(title: todoLabel.text!, isDone: isDoneSwitch.isOn))
    try await interactor?.postTodo(request: request)
    
    router!.dismiss()
  }
  
  func displaySomething(viewModel: Add.PostTodo.ViewModel)
  {
    todoLabel.text = viewModel.title
    isDoneSwitch.isOn = viewModel.isDone
  }
}
