//
//  MainInteractorTests.swift
//  TodoVipApp
//
//  Created by song on 2023/04/11.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import TodoVipApp
import XCTest

class MainInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: MainInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupMainInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMainInteractor()
  {
    sut = MainInteractor(session: MockURLSession())
  }
  
  // MARK: Test doubles
  
  class MainPresentationLogicSpy: MainPresentationLogic
  {
    var presentTodoListCalled = false
    var presentDeleteTodoCalled = false
    var presentModifyTodoCalled = false
    
    func presentTodoList(response: TodoListProtocol) {
      presentTodoListCalled = true
    }
    
    func presentDeleteTodo(response: MainScene.DeleteTodo.Response) {
      presentDeleteTodoCalled = true
    }
    
    func presentModifyTodo(response: MainScene.ModifyTodo.Response) {
      presentModifyTodoCalled = true
      
    }
  }
  
  // MARK: Tests
  
  func test_presentTodoList호출되는지() {
    // Given
    let spy = MainPresentationLogicSpy()
    sut.presenter = spy
    let request = MainScene.FetchTodoList.Request()
    
    // When
    sut.fetchTodoList(request: request)
    
    // Then
    XCTAssertTrue(spy.presentTodoListCalled)
  }
  
  func test_presentDeleteTodo호출되는지()
  {
    // Given
    let spy = MainPresentationLogicSpy()
    sut.presenter = spy
    let request = MainScene.DeleteTodo.Request(id: 1)

    // When
    sut.deleteTodo(request: request)

    // Then
    XCTAssertTrue(spy.presentDeleteTodoCalled)
  }
  
  func test_presentModifyTodo호출되는지()
  {
    // Given
    let spy = MainPresentationLogicSpy()
    sut.presenter = spy
    let request = MainScene.ModifyTodo.Request(id: 0, title: "", isDone: false)

    // When
    sut.modifyTodo(request: request)

    // Then
    XCTAssertTrue(spy.presentModifyTodoCalled)
  }
}
